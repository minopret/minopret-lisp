from lisp3 import *

print Symbol('defun').cons_(Symbol('null.').cons_((Symbol('x').cons_(List.nil)).cons_((Symbol.s_eq.cons_(Symbol('x').cons_((Symbol.s_quote.cons_(List.nil.cons_(List.nil))).cons_(List.nil)))).cons_(List.nil))))

print Symbol('defun').cons_(Symbol('and.').cons_((Symbol('x').cons_(Symbol('y').cons_(List.nil))).cons_((Symbol.s_cond.cons_((Symbol('x').cons_((Symbol.s_cond.cons_((Symbol('y').cons_((Symbol.s_quote.cons_(Symbol.s_t.cons_(List.nil))).cons_(List.nil))).cons_(((Symbol.s_quote.cons_(Symbol.s_t.cons_(List.nil))).cons_((Symbol.s_quote.cons_(List.nil.cons_(List.nil))).cons_(List.nil))).cons_(List.nil)))).cons_(List.nil))).cons_(((Symbol.s_quote.cons_(Symbol.s_t.cons_(List.nil))).cons_((Symbol.s_quote.cons_(List.nil.cons_(List.nil))).cons_(List.nil))).cons_(List.nil)))).cons_(List.nil))))

print Symbol('defun').cons_(Symbol('not.').cons_((Symbol('x').cons_(List.nil)).cons_((Symbol.s_cond.cons_((Symbol('x').cons_((Symbol.s_quote.cons_(List.nil.cons_(List.nil))).cons_(List.nil))).cons_(((Symbol.s_quote.cons_(Symbol.s_t.cons_(List.nil))).cons_((Symbol.s_quote.cons_(Symbol.s_t.cons_(List.nil))).cons_(List.nil))).cons_(List.nil)))).cons_(List.nil))))

print Symbol('defun').cons_(Symbol('append.').cons_((Symbol('x').cons_(Symbol('y').cons_(List.nil))).cons_((Symbol.s_cond.cons_(((Symbol('null.').cons_(Symbol('x').cons_(List.nil))).cons_(Symbol('y').cons_(List.nil))).cons_(((Symbol.s_quote.cons_(Symbol.s_t.cons_(List.nil))).cons_((Symbol.s_cons.cons_((Symbol.s_car.cons_(Symbol('x').cons_(List.nil))).cons_((Symbol('append.').cons_((Symbol.s_cdr.cons_(Symbol('x').cons_(List.nil))).cons_(Symbol('y').cons_(List.nil)))).cons_(List.nil)))).cons_(List.nil))).cons_(List.nil)))).cons_(List.nil))))

print Symbol('defun').cons_(Symbol('list.').cons_((Symbol('x').cons_(Symbol('y').cons_(List.nil))).cons_((Symbol.s_cons.cons_(Symbol('x').cons_((Symbol.s_cons.cons_(Symbol('y').cons_((Symbol.s_quote.cons_(List.nil.cons_(List.nil))).cons_(List.nil)))).cons_(List.nil)))).cons_(List.nil))))

print Symbol('defun').cons_(Symbol('pair.').cons_((Symbol('x').cons_(Symbol('y').cons_(List.nil))).cons_((Symbol.s_cond.cons_(((Symbol('and.').cons_((Symbol('null.').cons_(Symbol('x').cons_(List.nil))).cons_((Symbol('null.').cons_(Symbol('y').cons_(List.nil))).cons_(List.nil)))).cons_((Symbol.s_quote.cons_(List.nil.cons_(List.nil))).cons_(List.nil))).cons_(((Symbol('and.').cons_((Symbol('not.').cons_((Symbol.s_atom.cons_(Symbol('x').cons_(List.nil))).cons_(List.nil))).cons_((Symbol('not.').cons_((Symbol.s_atom.cons_(Symbol('y').cons_(List.nil))).cons_(List.nil))).cons_(List.nil)))).cons_((Symbol.s_cons.cons_((Symbol('list.').cons_((Symbol.s_car.cons_(Symbol('x').cons_(List.nil))).cons_((Symbol.s_car.cons_(Symbol('y').cons_(List.nil))).cons_(List.nil)))).cons_((Symbol('pair.').cons_((Symbol.s_cdr.cons_(Symbol('x').cons_(List.nil))).cons_((Symbol.s_cdr.cons_(Symbol('y').cons_(List.nil))).cons_(List.nil)))).cons_(List.nil)))).cons_(List.nil))).cons_(List.nil)))).cons_(List.nil))))

print Symbol('defun').cons_(Symbol('assoc.').cons_((Symbol('x').cons_(Symbol('y').cons_(List.nil))).cons_((Symbol.s_cond.cons_(((Symbol.s_eq.cons_((Symbol('caar').cons_(Symbol('y').cons_(List.nil))).cons_(Symbol('x').cons_(List.nil)))).cons_((Symbol('cadar').cons_(Symbol('y').cons_(List.nil))).cons_(List.nil))).cons_(((Symbol.s_quote.cons_(Symbol.s_t.cons_(List.nil))).cons_((Symbol('assoc.').cons_(Symbol('x').cons_((Symbol.s_cdr.cons_(Symbol('y').cons_(List.nil))).cons_(List.nil)))).cons_(List.nil))).cons_(List.nil)))).cons_(List.nil))))

print Symbol('defun').cons_(Symbol('eval.').cons_((Symbol('e').cons_(Symbol('a').cons_(List.nil))).cons_((Symbol.s_cond.cons_(((Symbol.s_atom.cons_(Symbol('e').cons_(List.nil))).cons_((Symbol('assoc.').cons_(Symbol('e').cons_(Symbol('a').cons_(List.nil)))).cons_(List.nil))).cons_(((Symbol.s_atom.cons_((Symbol.s_car.cons_(Symbol('e').cons_(List.nil))).cons_(List.nil))).cons_((Symbol.s_cond.cons_(((Symbol.s_eq.cons_((Symbol.s_car.cons_(Symbol('e').cons_(List.nil))).cons_((Symbol.s_quote.cons_(Symbol.s_quote.cons_(List.nil))).cons_(List.nil)))).cons_((Symbol('cadr').cons_(Symbol('e').cons_(List.nil))).cons_(List.nil))).cons_(((Symbol.s_eq.cons_((Symbol.s_car.cons_(Symbol('e').cons_(List.nil))).cons_((Symbol.s_quote.cons_(Symbol.s_atom.cons_(List.nil))).cons_(List.nil)))).cons_((Symbol.s_atom.cons_((Symbol('eval.').cons_((Symbol('cadr').cons_(Symbol('e').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_(List.nil))).cons_(List.nil))).cons_(((Symbol.s_eq.cons_((Symbol.s_car.cons_(Symbol('e').cons_(List.nil))).cons_((Symbol.s_quote.cons_(Symbol.s_eq.cons_(List.nil))).cons_(List.nil)))).cons_((Symbol.s_eq.cons_((Symbol('eval.').cons_((Symbol('cadr').cons_(Symbol('e').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_((Symbol('eval.').cons_((Symbol('caddr').cons_(Symbol('e').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_(List.nil)))).cons_(List.nil))).cons_(((Symbol.s_eq.cons_((Symbol.s_car.cons_(Symbol('e').cons_(List.nil))).cons_((Symbol.s_quote.cons_(Symbol.s_car.cons_(List.nil))).cons_(List.nil)))).cons_((Symbol.s_car.cons_((Symbol('eval.').cons_((Symbol('cadr').cons_(Symbol('e').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_(List.nil))).cons_(List.nil))).cons_(((Symbol.s_eq.cons_((Symbol.s_car.cons_(Symbol('e').cons_(List.nil))).cons_((Symbol.s_quote.cons_(Symbol.s_cdr.cons_(List.nil))).cons_(List.nil)))).cons_((Symbol.s_cdr.cons_((Symbol('eval.').cons_((Symbol('cadr').cons_(Symbol('e').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_(List.nil))).cons_(List.nil))).cons_(((Symbol.s_eq.cons_((Symbol.s_car.cons_(Symbol('e').cons_(List.nil))).cons_((Symbol.s_quote.cons_(Symbol.s_cons.cons_(List.nil))).cons_(List.nil)))).cons_((Symbol.s_cons.cons_((Symbol('eval.').cons_((Symbol('cadr').cons_(Symbol('e').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_((Symbol('eval.').cons_((Symbol('caddr').cons_(Symbol('e').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_(List.nil)))).cons_(List.nil))).cons_(((Symbol.s_eq.cons_((Symbol.s_car.cons_(Symbol('e').cons_(List.nil))).cons_((Symbol.s_quote.cons_(Symbol.s_cond.cons_(List.nil))).cons_(List.nil)))).cons_((Symbol('evcon.').cons_((Symbol.s_cdr.cons_(Symbol('e').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_(List.nil))).cons_(((Symbol.s_quote.cons_(Symbol.s_t.cons_(List.nil))).cons_((Symbol('eval.').cons_((Symbol.s_cons.cons_((Symbol('assoc.').cons_((Symbol.s_car.cons_(Symbol('e').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_((Symbol.s_cdr.cons_(Symbol('e').cons_(List.nil))).cons_(List.nil)))).cons_(Symbol('a').cons_(List.nil)))).cons_(List.nil))).cons_(List.nil)))))))))).cons_(List.nil))).cons_(((Symbol.s_eq.cons_((Symbol('caar').cons_(Symbol('e').cons_(List.nil))).cons_((Symbol.s_quote.cons_(Symbol.s_label.cons_(List.nil))).cons_(List.nil)))).cons_((Symbol('eval.').cons_((Symbol.s_cons.cons_((Symbol('caddar').cons_(Symbol('e').cons_(List.nil))).cons_((Symbol.s_cdr.cons_(Symbol('e').cons_(List.nil))).cons_(List.nil)))).cons_((Symbol.s_cons.cons_((Symbol('list.').cons_((Symbol('cadar').cons_(Symbol('e').cons_(List.nil))).cons_((Symbol.s_car.cons_(Symbol('e').cons_(List.nil))).cons_(List.nil)))).cons_(Symbol('a').cons_(List.nil)))).cons_(List.nil)))).cons_(List.nil))).cons_(((Symbol.s_eq.cons_((Symbol('caar').cons_(Symbol('e').cons_(List.nil))).cons_((Symbol.s_quote.cons_(Symbol.s_lambda.cons_(List.nil))).cons_(List.nil)))).cons_((Symbol('eval.').cons_((Symbol('caddar').cons_(Symbol('e').cons_(List.nil))).cons_((Symbol('append.').cons_((Symbol('pair.').cons_((Symbol('cadar').cons_(Symbol('e').cons_(List.nil))).cons_((Symbol('evlis.').cons_((Symbol.s_cdr.cons_(Symbol('e').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_(List.nil)))).cons_(Symbol('a').cons_(List.nil)))).cons_(List.nil)))).cons_(List.nil))).cons_(List.nil)))))).cons_(List.nil))))

print Symbol('defun').cons_(Symbol('evcon.').cons_((Symbol('c').cons_(Symbol('a').cons_(List.nil))).cons_((Symbol.s_cond.cons_(((Symbol('eval.').cons_((Symbol('caar').cons_(Symbol('c').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_((Symbol('eval.').cons_((Symbol('cadar').cons_(Symbol('c').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_(List.nil))).cons_(((Symbol.s_quote.cons_(Symbol.s_t.cons_(List.nil))).cons_((Symbol('evcon.').cons_((Symbol.s_cdr.cons_(Symbol('c').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_(List.nil))).cons_(List.nil)))).cons_(List.nil))))

print Symbol('defun').cons_(Symbol('evlis.').cons_((Symbol('m').cons_(Symbol('a').cons_(List.nil))).cons_((Symbol.s_cond.cons_(((Symbol('null.').cons_(Symbol('m').cons_(List.nil))).cons_((Symbol.s_quote.cons_(List.nil.cons_(List.nil))).cons_(List.nil))).cons_(((Symbol.s_quote.cons_(Symbol.s_t.cons_(List.nil))).cons_((Symbol.s_cons.cons_((Symbol('eval.').cons_((Symbol.s_car.cons_(Symbol('m').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_((Symbol('evlis.').cons_((Symbol.s_cdr.cons_(Symbol('m').cons_(List.nil))).cons_(Symbol('a').cons_(List.nil)))).cons_(List.nil)))).cons_(List.nil))).cons_(List.nil)))).cons_(List.nil))))

